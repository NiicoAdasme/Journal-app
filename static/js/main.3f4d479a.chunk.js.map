{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","components/hooks/useForm/useForm.js","components/notes/NotesAppBar.jsx","components/notes/NoteScreen.jsx","components/journal/NothingSelected.jsx","actions/ui.js","actions/auth.js","components/journal/JournalEntry.jsx","components/journal/JournalEntries.jsx","components/journal/Sidebar.jsx","components/journal/JournalScreen.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.jsx","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","githubAuthProvider","GithubAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","respJson","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFireStore","doc","update","then","refreshNote","Swal","fire","catch","err","console","log","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","date","moment","format","active","useSelector","state","hour","setHour","setTimeout","className","style","display","onChange","e","files","title","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","autoComplete","autoFocus","cols","rows","src","alt","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","NothingSelected","removeError","uiFinishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","message","signOut","logout","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","newNote","Date","getTime","add","JournalScreen","LoginScreen","formValues","loading","ui","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","bgColor","spinnerColor","textColor","children","exact","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3f4d479a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyACxO5-Rj9UCcRcUiPs0LhRe0erK1Yvytk\",\r\n    authDomain: \"react-app-curso-d5704.firebaseapp.com\",\r\n    projectId: \"react-app-curso-d5704\",\r\n    storageBucket: \"react-app-curso-d5704.appspot.com\",\r\n    messagingSenderId: \"191971322294\",\r\n    appId: \"1:191971322294:web:1a4e2ec5cf215533d4b917\",\r\n    measurementId: \"G-ZHS57JKJ7N\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    facebookAuthProvider,\r\n    githubAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async(uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n\r\n};","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutClearing: '[Notes] Logout Clearing'\r\n    \r\n\r\n};","\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const url = 'https://api.cloudinary.com/v1_1/dfdtq3zzf/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( url, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if( resp.ok ){\r\n            const respJson = await resp.json();\r\n        \r\n            return respJson.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n};\r\n","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n// react-journal\r\n\r\nexport const startNewNotes = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            url: '',\r\n            date: new Date().getTime()\r\n        };\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch( activeNote(doc.id, newNote) );\r\n\r\n        dispatch( addNewNote(doc.id, newNote) );\r\n    };\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n\r\n        dispatch(setNotes(notes));\r\n    };\r\n};\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        !note.url && delete note.url\r\n\r\n        const noteToFireStore = { ...note };\r\n\r\n        delete noteToFireStore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore)\r\n            .then(() => {\r\n                dispatch(startLoadingNotes(uid));\r\n                dispatch( refreshNote(note.id, note) );\r\n                Swal.fire(\r\n                    'Note Saved!',\r\n                    '',\r\n                    'success'\r\n                )\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n        dispatch(refreshNote(note.id, noteToFireStore));\r\n    };\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: note } = getState().notes;\r\n\r\n        const { uid } = getState().auth\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        note.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(note));\r\n\r\n        dispatch(startLoadingNotes(uid));\r\n\r\n        dispatch(refreshNote(note.id, note))\r\n\r\n        Swal.close();\r\n\r\n    };\r\n};\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then( async(result) => {\r\n            if (result.isConfirmed) {\r\n                await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n                    .then( () => {\r\n                        dispatch(deleteNote(id));\r\n\r\n                        Swal.fire(\r\n                            'Deleted!',\r\n                            'Your note has been deleted.',\r\n                            'success'\r\n                        )\r\n                    })\r\n                    .catch(err => {\r\n                        throw err;\r\n                    })\r\n            }\r\n        })        \r\n    };\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\nexport const notesLogout = () => ({\r\n    type: types.notesLogoutClearing\r\n});","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    };\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const date = moment().format('LL');\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const [hour, setHour] = useState(moment().format('LTS')); \r\n\r\n    setTimeout(() => {\r\n        setHour(moment().format('LTS'))\r\n    }, 1000);\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    };\r\n\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if( file ){\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ date }</span>\r\n            <span>{hour}</span>\r\n\r\n            <input \r\n                type=\"file\"\r\n                id=\"fileSelector\"\r\n                name=\"file\"\r\n                style={{ display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n        \r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePicture}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../hooks/useForm/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const {active: note} = useSelector(state => state.notes);\r\n\r\n    const {url} = useSelector(state => state.notes.active);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [values, handleInputChange, reset] = useForm(note);\r\n\r\n    const {title, body} = values;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if( note.id !== activeId.current ){\r\n            reset( note );\r\n            activeId.current = note.id; \r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( values.id, {...values} ) );\r\n\r\n    }, [dispatch, values])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(note.id) );\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\" \r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    onChange={handleInputChange}\r\n                    value={title}\r\n                />\r\n\r\n                <textarea \r\n                    name=\"body\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    onChange={handleInputChange}\r\n                    value={body}\r\n                ></textarea>\r\n\r\n                {\r\n                    url &&\r\n                    <div className=\"notes__images\">\r\n                        <img\r\n                            src={url}\r\n                            alt=\"img-notes\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const uiStartLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const uiFinishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});\r\n","import { types } from \"../types/types\"\r\nimport {\r\n    firebase,\r\n    facebookAuthProvider,\r\n    githubAuthProvider,\r\n    googleAuthProvider\r\n} from '../firebase/firebase-config';\r\nimport { uiFinishLoading, uiStartLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2';\r\nimport { notesLogout } from \"./notes\";\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( uiStartLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n                dispatch( uiFinishLoading() );\r\n\r\n                dispatch( login(user.uid, user.displayName) );\r\n            })\r\n            .catch( err => {\r\n                dispatch( uiFinishLoading() );\r\n                // console.log(err);\r\n                Swal.fire({\r\n                    title: 'Error!',\r\n                    text: err.message,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                });\r\n            })\r\n    \r\n    };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({user}) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n            })\r\n            .catch( err => {\r\n                // console.log(err);\r\n                Swal.fire({\r\n                    title: 'Error!',\r\n                    text: err.message,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                });\r\n            })\r\n    };\r\n};\r\n\r\nexport const startFacebookLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(facebookAuthProvider)\r\n            .then( ({user}) => {\r\n                dispatch( login( user.uid, user.displayName) );\r\n                // console.log(resp);\r\n            })\r\n            .catch( err => {\r\n                // console.log(err);\r\n                Swal.fire({\r\n                    title: 'Error!',\r\n                    text: err.message,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                });\r\n            })\r\n    };\r\n};\r\n\r\nexport const startGithubLogin = () => {\r\n\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(githubAuthProvider)\r\n            .then( ({user}) => {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                // console.log(result);\r\n            } )\r\n            .catch( err => {\r\n                // console.log(err);\r\n                Swal.fire({\r\n                    title: 'Error!',\r\n                    text: err.message,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signOut()\r\n            .then( () => {\r\n                dispatch( logout() );\r\n                dispatch( notesLogout() );\r\n            })\r\n            .catch( err => {\r\n                throw err;\r\n            })\r\n    };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    } \r\n})\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});\r\n\r\nexport const startRegisterWithEmailPasswordName = (name, email, password) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({user}) => {\r\n                await user.updateProfile({\r\n                    displayName: name\r\n                  });\r\n                dispatch( login(user.uid, user.displayName) );\r\n            })\r\n            .catch( err => {\r\n                // console.log(err);\r\n                Swal.fire({\r\n                    title: 'Error!',\r\n                    text: err.message,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                });\r\n            })\r\n    };\r\n};\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({ id, title, body, date, url }) => {\r\n\r\n    const noteDate = moment( date );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleActiveNote = () => {\r\n\r\n        const note = {\r\n            id,\r\n            title,\r\n            body,\r\n            date,\r\n            url\r\n        };\r\n\r\n        dispatch( activeNote(id, note) );\r\n\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn\"\r\n            onClick={handleActiveNote}\r\n        >\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url( ${url} )`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nJournalEntry.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n    date: PropTypes.number.isRequired\r\n};\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__entries \">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signOut } from '../../actions/auth';\r\nimport { startNewNotes } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( signOut() );\r\n    };\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNotes() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"jounal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n    \r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"jounarl__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    active ?\r\n                    <NoteScreen />\r\n                    :\r\n                    <NothingSelected />\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n    startFacebookLogin, \r\n    startGithubLogin, \r\n    startGoogleLogin, \r\n    startLoginEmailPassword \r\n} from '../../actions/auth';\r\nimport { useForm } from '../hooks/useForm/useForm';\r\n// import { \r\n//     FacebookLoginButton,\r\n//     GoogleLoginButton,\r\n//     GithubLoginButton\r\n\r\n// } from \"react-social-login-buttons\";\r\nimport GithubButton from 'react-github-login-button';\r\nimport validator from 'validator';\r\nimport { removeError } from '../../actions/ui';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if( isFormValid() ){\r\n            dispatch( startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( !validator.isEmail( email ) ){\r\n            // dispatch( setError('Email is not valid') );\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Email is not valid',\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            });\r\n            return false;\r\n        }else if( password.length <5 ){\r\n            // dispatch( setError('Password is not valid') );\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Password is not valid',\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    };\r\n\r\n    const handleFacebookLogin = () => {\r\n        dispatch( startFacebookLogin() );\r\n    }\r\n\r\n    const handleGithubLogin = () => {\r\n        dispatch( startGithubLogin() );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title mb-5\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin} \r\n                className=\"animate__animated animate__fadeIn\"\r\n            >\r\n\r\n                {\r\n                    // (msgError) &&\r\n                    // <div className=\"auth__alert-error\">\r\n                    //     <span> {msgError}</span>\r\n                    // </div>\r\n                    \r\n                }\r\n\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <hr />\r\n\r\n                <div className=\"auth__social-newtworks\">\r\n                    <p>Login Social Networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn mb-5 mt-1\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* <button className=\"loginBtn loginBtn--google\">\r\n                        Login with Google\r\n                    </button> */}\r\n\r\n                    {/* <GoogleLoginButton onClick={handleGoogleLogin}  size=\"30px\" />\r\n\r\n                    <FacebookLoginButton onClick={handleFacebookLogin} size=\"30px\" />\r\n\r\n                    <GithubLoginButton onClick={handleGithubLogin} size=\"30px\" /> */}\r\n\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"loginBtn loginBtn--facebook mb-5\"\r\n                        onClick={handleFacebookLogin}\r\n                    >\r\n                        Sign in with Facebook\r\n                    </button>\r\n\r\n                    <GithubButton\r\n                        onClick={handleGithubLogin}\r\n                    />\r\n                    \r\n\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new Account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // const {msgError} = useSelector(state => state.ui);\r\n\r\n    const initialForm = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    };\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(initialForm);\r\n\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmailPasswordName(name, email, password) );\r\n        }\r\n\r\n        reset();\r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ){\r\n            // dispatch( setError('Name is required') );\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Name is required',\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            });\r\n            return false;\r\n        }else if( !validator.isEmail( email ) ){\r\n            // dispatch( setError('Email is not valid') );\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Email is not valid',\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            });\r\n            return false;\r\n        }else if( password !== password2 ){\r\n            // dispatch( setError('Password not match') );\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Password not match',\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            });\r\n            return false;\r\n        }else if( password.length <5 ){\r\n            // dispatch( setError('Password is too weak or common to use') );\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Password is too weak or common to use',\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"auth__title mb-5\">Register</h3>\r\n\r\n        <form \r\n            onSubmit={handleRegister}\r\n            className=\"animate__animated animate__fadeIn\"\r\n        >\r\n\r\n            {\r\n                // (msgError) &&\r\n                // <div className=\"auth__alert-error\">\r\n                //     <span> {msgError}</span>\r\n                // </div>\r\n            }\r\n\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                className=\"auth__input\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n                value={name}\r\n            />\r\n\r\n            <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"auth__input\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n                value={email}\r\n            />\r\n\r\n            <input type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"auth__input\"\r\n                onChange={handleInputChange}\r\n                value={password}\r\n            />\r\n\r\n            <input type=\"password\"\r\n                name=\"password2\"\r\n                placeholder=\"Confirm Password\"\r\n                className=\"auth__input\"\r\n                onChange={handleInputChange}\r\n                value={password2}\r\n            />\r\n\r\n            <button \r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block mb-5\"\r\n            >\r\n                Register\r\n            </button>\r\n\r\n            <hr />\r\n\r\n            <Link \r\n                to=\"/auth/login\"\r\n                className=\"link\" \r\n            >\r\n                Alredy register\r\n            </Link>\r\n\r\n        </form>\r\n\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n\r\n                    <Route path=\"/auth/login\" component={LoginScreen} />\r\n\r\n                    <Route path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (!isAuthenticated) ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to=\"/\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated) ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to=\"/auth/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { \r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch,\r\n\r\n} from 'react-router-dom'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport LoadingScreen from 'react-loading-screen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //  cheking true = loading / false = not loading\r\n    const [cheking, setCheking] = useState(true);\r\n\r\n    // isLoggedIn false = no logged / true = logged\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if( user?.uid ){\r\n                dispatch( login(user.uid, user.displayName) );\r\n\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch( startLoadingNotes( user.uid) );\r\n            }else{\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setCheking( false );\r\n\r\n        })\r\n        \r\n    }, [dispatch, setCheking, setIsLoggedIn])\r\n\r\n    if( cheking ){\r\n        return (\r\n            <LoadingScreen\r\n                loading={true}\r\n                bgColor='#676767'\r\n                spinnerColor='#9ee5f8'\r\n                textColor='#f1f1f1'\r\n                text='Loading...'\r\n                children=''\r\n        /   >\r\n        );\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <Router>\r\n\r\n           <div>\r\n               <Switch>\r\n                    <PublicRoute \r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n               </Switch>\r\n           </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch ( action.type  ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            };\r\n            \r\n        case  types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            };\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n};\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            };\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            };\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map( \r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            };\r\n        case types.notesFileUrl:\r\n            return;\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        case types.notesLogoutClearing:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import {types} from '../types/types';\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch(action.type){\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n\r\n        case types.logout:\r\n            return {};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter.jsx'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store.js';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store} >\r\n\r\n            <AppRouter/>\r\n        \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}